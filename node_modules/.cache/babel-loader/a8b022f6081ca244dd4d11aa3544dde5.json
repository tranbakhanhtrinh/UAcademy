{"ast":null,"code":"var _jsxFileName = \"/Users/tranbakhanhtrinh/Desktop/academy/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport './Input.scss';\n\nconst input = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"field_input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: \"field_input\",\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, props.options.map(option => React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, option.displayValue)));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: \"field_input\"\n      }, props.elementConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"field_input\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/tranbakhanhtrinh/Desktop/academy/src/components/UI/Input/Input.js"],"names":["React","input","props","inputElement","elementType","elementConfig","value","changed","options","map","option","displayValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,MAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAQD,KAAK,CAACE,WAAd;AACI,SAAM,OAAN;AACID,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAC;AADC,SAEPD,KAAK,CAACG,aAFC;AAGX,QAAA,KAAK,EAAIH,KAAK,CAACI,KAHJ;AAIX,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAMA;;AAEJ,SAAM,QAAN;AACIJ,MAAAA,YAAY,GACR;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,KAAK,EAAID,KAAK,CAACI,KAFnB;AAGI,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKSL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACrB;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACJ,KAApB;AAA2B,QAAA,KAAK,EAAEI,MAAM,CAACJ,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDI,MAAM,CAACC,YAAxD,CADH,CALT,CADJ;AAWA;;AACJ,SAAM,UAAN;AACIR,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAG;AADD,SAEPD,KAAK,CAACG,aAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AACJ;AACIF,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAC;AADC,SAEPD,KAAK,CAACG,aAFC;AAGX,QAAA,KAAK,EAAIH,KAAK,CAACI,KAHJ;AAIX,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AA/BR;;AAsCA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YADL,CADJ;AAKH,CA9CD;;AAgDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\n\nimport './Input.scss';\n\nconst input = props => {\n    let inputElement = null;\n    \n    switch (props.elementType){\n        case ('input'):\n            inputElement = <input \n                className=\"field_input\"\n                {...props.elementConfig}\n                value = {props.value} \n                onChange={props.changed}\n                />\n            break;\n        \n        case ('select'): \n            inputElement = (\n                <select \n                    className=\"field_input\"\n                    value = {props.value}\n                    onChange={props.changed}\n                    >\n                        {props.options.map(option => (\n                            <option key={option.value} value={option.value}>{option.displayValue}</option>\n                        ))}\n                </select>\n            )\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className = \"field_input\"\n                {...props.elementConfig}\n                >\n            </textarea>\n            break;\n        default:\n            inputElement = <input \n                className=\"field_input\"\n                {...props.elementConfig}\n                value = {props.value} \n                onChange={props.changed}\n                />\n    }\n    return(\n        <div>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input;"]},"metadata":{},"sourceType":"module"}